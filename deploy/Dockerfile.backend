# Test-Web Backend Production Dockerfile
# 多阶段构建，优化镜像大小

ARG NODE_VERSION=20-alpine

# ============================================
# Stage 1: Dependencies
# ============================================
FROM node:${NODE_VERSION} AS dependencies

WORKDIR /app

# 复制 package files
COPY backend/package*.json ./backend/
COPY shared/package*.json ./shared/
COPY package*.json ./

# 安装依赖 (仅生产环境)
RUN cd backend && npm ci --only=production && \
    cd ../shared && npm ci --only=production

# ============================================
# Stage 2: Build
# ============================================
FROM node:${NODE_VERSION} AS builder

WORKDIR /app

# 复制依赖
COPY --from=dependencies /app/node_modules ./node_modules
COPY --from=dependencies /app/backend/node_modules ./backend/node_modules
COPY --from=dependencies /app/shared/node_modules ./shared/node_modules

# 复制源代码
COPY backend ./backend
COPY shared ./shared
COPY package*.json ./

# 如果有TypeScript，编译
# RUN cd backend && npm run build

# ============================================
# Stage 3: Production Runtime
# ============================================
FROM node:${NODE_VERSION}

# 安装必要的系统依赖
RUN apk add --no-cache \
    ca-certificates \
    wget \
    curl \
    postgresql-client \
    && rm -rf /var/cache/apk/*

# 创建非root用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S backend -u 1001

WORKDIR /app

# 从builder复制文件
COPY --from=builder --chown=backend:nodejs /app/backend ./backend
COPY --from=builder --chown=backend:nodejs /app/shared ./shared
COPY --from=builder --chown=backend:nodejs /app/package*.json ./

# 创建必要的目录
RUN mkdir -p backend/logs backend/uploads backend/reports backend/exports && \
    chown -R backend:nodejs backend/logs backend/uploads backend/reports backend/exports

# 切换到非root用户
USER backend

# 暴露端口
EXPOSE 3001

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:3001/health || exit 1

# 启动应用
CMD ["node", "backend/src/app.js"]

