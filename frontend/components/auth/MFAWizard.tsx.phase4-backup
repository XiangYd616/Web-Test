/**
 * MFA设置向导组件
 * 提供分步骤的MFA设置引导流程，包括介绍、设置、验证和完成步骤
 * 版本: v1.0.0
 */

import React, { useState } from 'react';
import {
  ArrowLeft,
  ArrowRight,
  Check,
  CheckCircle,
  Download,
  Key,
  QrCode,
  Shield,
  ShieldCheck,
  Smartphone,
  Users,
  Zap
} from 'lucide-react';
import { MFASetup } from './MFASetup';

// ==================== 类型定义 ====================

export interface MFAWizardProps {
  userId: string;
  userEmail: string;
  onComplete?: () => void;
  onCancel?: () => void;
  className?: string;
}

type WizardStep = 'intro' | 'benefits' | 'setup' | 'verify' | 'complete';

interface BenefitItem {
  icon: React.ReactNode;
  title: string;
  description: string;
}

interface FeatureItem {
  icon: React.ReactNode;
  title: string;
  description: string;
}

// ==================== 主组?====================

export const MFAWizard: React.FC<MFAWizardProps> = ({
  userId,
  userEmail,
  onComplete,
  onCancel,
  className = ''
}) => {
  const [currentStep, setCurrentStep] = useState<WizardStep>('intro');
  const [_setupComplete, setSetupComplete] = useState(false);

  const steps: Record<WizardStep, { title: string; description: string }> = {
    intro: { title: '欢迎使用多因素认?, description: '提升账户安全性的重要一? },
    benefits: { title: '了解MFA的优?, description: '为什么需要双因素认证' },
    setup: { title: '设置身份验证?, description: '配置您的验证应用' },
    verify: { title: '验证设置', description: '确认一切工作正? },
    complete: { title: '设置完成', description: '您的账户现在更安全了' }
  };

  const benefits: BenefitItem[] = [
    {
      icon: <Shield className="w-8 h-8 text-blue-400" />,
      title: '额外安全保护',
      description: '即使密码被泄露，攻击者也无法访问您的账户'
    },
    {
      icon: <Key className="w-8 h-8 text-green-400" />,
      title: '防止未授权访?,
      description: '每次登录都需要您的设备生成的唯一验证?
    },
    {
      icon: <Zap className="w-8 h-8 text-yellow-400" />,
      title: '快速便?,
      description: '使用身份验证器应用只需几秒钟即可完成验?
    }
  ];

  const features: FeatureItem[] = [
    {
      icon: <Smartphone className="w-6 h-6 text-blue-400" />,
      title: '多种身份验证器支?,
      description: 'Google Authenticator、Microsoft Authenticator、Authy?
    },
    {
      icon: <Download className="w-6 h-6 text-green-400" />,
      title: '备用码保?,
      description: '提供备用恢复代码，防止设备丢失时无法登录'
    },
    {
      icon: <Users className="w-6 h-6 text-purple-400" />,
      title: '企业级安?,
      description: '符合行业安全标准，保护企业和个人数据'
    }
  ];

  const handleNext = () => {
    const stepOrder: WizardStep[] = ['intro', 'benefits', 'setup', 'verify', 'complete'];

    /**

     * if功能函数

     * @param {Object} params - 参数对象

     * @returns {Promise<Object>} 返回结果

     */
    const currentIndex = stepOrder.indexOf(currentStep);
    if (currentIndex < stepOrder.length - 1) {
      setCurrentStep(stepOrder[currentIndex + 1]);
    }
  };

  const handlePrevious = () => {
    const stepOrder: WizardStep[] = ['intro', 'benefits', 'setup', 'verify', 'complete'];

    /**

     * if功能函数

     * @param {Object} params - 参数对象

     * @returns {Promise<Object>} 返回结果

     */
    const currentIndex = stepOrder.indexOf(currentStep);
    if (currentIndex > 0) {
      setCurrentStep(stepOrder[currentIndex - 1]);
    }
  };

  const handleSetupComplete = () => {
    setSetupComplete(true);
    setCurrentStep('complete');
  };

  const handleFinish = () => {
    onComplete?.();
  };

  const renderProgressBar = () => {
    const stepOrder: WizardStep[] = ['intro', 'benefits', 'setup', 'verify', 'complete'];
    const currentIndex = stepOrder.indexOf(currentStep);
    const progress = ((currentIndex + 1) / stepOrder.length) * 100;

    return (
      <div className="mb-8">
        <div className="flex items-center justify-between mb-2">
          <span className="text-sm font-medium text-gray-300">设置进度</span>
          <span className="text-sm font-medium text-blue-400">{currentIndex + 1}/{stepOrder.length}</span>
        </div>
        <div className="w-full bg-gray-700 rounded-full h-2">
          <div 
            className="bg-blue-500 h-2 rounded-full transition-all duration-300 ease-out"
            style={{ width: `${progress}%` }}
          ></div>
        </div>
      </div>
    );
  };

  const renderIntroStep = () => (
    <div className="text-center space-y-6">
      <div className="w-20 h-20 bg-blue-600 rounded-full flex items-center justify-center mx-auto">
        <Shield className="w-10 h-10 text-white" />
      </div>
      
      <div>
        <h1 className="text-2xl font-bold text-white mb-4">
          保护您的 TestWeb 账户
        </h1>
        <p className="text-gray-400 text-lg leading-relaxed">
          通过启用多因素认?MFA)，为您的账户添加额外的安全保护层?
          这只需要几分钟时间，但能大大提高您账户的安全性?
        </p>
      </div>

      <div className="bg-blue-900/30 border border-blue-700 rounded-lg p-6">
        <div className="flex items-start space-x-3">
          <ShieldCheck className="w-6 h-6 text-blue-400 mt-0.5" />
          <div className="text-left">
            <h3 className="font-medium text-blue-200 mb-2">为什么选择MFA?/h3>
            <p className="text-blue-300 text-sm leading-relaxed">
              根据研究，启用MFA可以阻止99.9%的自动化攻击。即使您的密码被泄露?
              攻击者仍然无法访问您的账户?
            </p>
          </div>
        </div>
      </div>

      <div className="flex space-x-3">
        <button
          onClick={onCancel}
          className="flex-1 px-6 py-3 bg-gray-600 hover:bg-gray-500 text-white rounded-lg transition-colors"
        >
          稍后设置
        </button>
        <button
          onClick={handleNext}
          className="flex-1 px-6 py-3 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center"
        >
          开始设?
          <ArrowRight className="w-4 h-4 ml-2" />
        </button>
      </div>
    </div>
  );

  const renderBenefitsStep = () => (
    <div className="space-y-6">
      <div className="text-center">
        <div className="w-16 h-16 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <CheckCircle className="w-8 h-8 text-white" />
        </div>
        <h2 className="text-xl font-semibold text-white mb-2">MFA的主要优?/h2>
        <p className="text-gray-400">了解多因素认证如何保护您的账户安?/p>
      </div>

      <div className="space-y-4">
        {benefits.map((benefit, index) => (
          <div 
            key={index}
            className="bg-gray-800 rounded-lg p-4 border border-gray-700"
          >
            <div className="flex items-start space-x-4">
              <div className="w-12 h-12 rounded-lg bg-gray-700 flex items-center justify-center flex-shrink-0">
                {benefit.icon}
              </div>
              <div>
                <h3 className="font-medium text-white mb-1">{benefit.title}</h3>
                <p className="text-gray-400 text-sm leading-relaxed">
                  {benefit.description}
                </p>
              </div>
            </div>
          </div>
        ))}
      </div>

      <div className="bg-gray-800 rounded-lg p-4">
        <h3 className="font-medium text-white mb-3">支持的功?/h3>
        <div className="space-y-3">
          {features.map((feature, index) => (
            <div key={index} className="flex items-center space-x-3">
              <div className="w-8 h-8 rounded-full bg-gray-700 flex items-center justify-center flex-shrink-0">
                {feature.icon}
              </div>
              <div>
                <span className="text-white text-sm font-medium">{feature.title}</span>
                <p className="text-gray-400 text-xs">{feature.description}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      <div className="flex space-x-3">
        <button
          onClick={handlePrevious}
          className="flex-1 px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded-lg transition-colors flex items-center justify-center"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          上一?
        </button>
        <button
          onClick={handleNext}
          className="flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors flex items-center justify-center"
        >
          继续设置
          <ArrowRight className="w-4 h-4 ml-2" />
        </button>
      </div>
    </div>
  );

  const renderSetupStep = () => (
    <div className="space-y-6">
      <div className="text-center">
        <div className="w-16 h-16 bg-blue-600 rounded-full flex items-center justify-center mx-auto mb-4">
          <QrCode className="w-8 h-8 text-white" />
        </div>
        <h2 className="text-xl font-semibold text-white mb-2">设置身份验证?/h2>
        <p className="text-gray-400">按照下面的步骤配置您的身份验证器应用</p>
      </div>

      <MFASetup
        userId={userId}
        userEmail={userEmail}
        onSetupComplete={handleSetupComplete}
        onClose={() => setCurrentStep('benefits')}
      />

      <div className="flex justify-center">
        <button
          onClick={handlePrevious}
          className="px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded-lg transition-colors flex items-center"
        >
          <ArrowLeft className="w-4 h-4 mr-2" />
          返回上一?
        </button>
      </div>
    </div>
  );

  const renderCompleteStep = () => (
    <div className="text-center space-y-6">
      <div className="w-20 h-20 bg-green-600 rounded-full flex items-center justify-center mx-auto">
        <Check className="w-10 h-10 text-white" />
      </div>
      
      <div>
        <h1 className="text-2xl font-bold text-white mb-4">
          🎉 MFA设置完成?
        </h1>
        <p className="text-gray-400 text-lg leading-relaxed">
          恭喜！您已经成功为账户启用了多因素认证?
          您的 TestWeb 账户现在受到了额外的安全保护?
        </p>
      </div>

      <div className="bg-green-900/30 border border-green-700 rounded-lg p-6">
        <div className="grid grid-cols-2 gap-4 text-center">
          <div>
            <div className="w-8 h-8 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-2">
              <Shield className="w-4 h-4 text-white" />
            </div>
            <p className="text-green-200 text-sm font-medium">账户安全</p>
            <p className="text-green-300 text-xs">大幅提升</p>
          </div>
          <div>
            <div className="w-8 h-8 bg-green-600 rounded-full flex items-center justify-center mx-auto mb-2">
              <Key className="w-4 h-4 text-white" />
            </div>
            <p className="text-green-200 text-sm font-medium">备用?/p>
            <p className="text-green-300 text-xs">已生?/p>
          </div>
        </div>
      </div>

      <div className="bg-blue-900/30 border border-blue-700 rounded-lg p-4">
        <div className="flex items-start space-x-3">
          <ShieldCheck className="w-5 h-5 text-blue-400 mt-0.5" />
          <div className="text-left text-sm">
            <h3 className="font-medium text-blue-200 mb-1">下次登录提醒</h3>
            <p className="text-blue-300">
              下次登录时，系统会要求您输入身份验证器应用中的验证码?
              请确保您的手机上已安装并设置好了身份验证器应用?
            </p>
          </div>
        </div>
      </div>

      <div className="space-y-3">
        <button
          onClick={handleFinish}
          className="w-full px-6 py-3 bg-green-600 hover:bg-green-700 text-white rounded-lg transition-colors font-medium"
        >
          完成设置
        </button>
        
        <div className="flex space-x-3">
          <button
            onClick={() => setCurrentStep('setup')}
            className="flex-1 px-4 py-2 bg-gray-600 hover:bg-gray-500 text-white rounded-lg transition-colors text-sm"
          >
            重新设置
          </button>
          <button
            onClick={() => {/* 这里可以链接到帮助页?*/}}
            className="flex-1 px-4 py-2 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors text-sm"
          >
            查看帮助
          </button>
        </div>
      </div>
    </div>
  );

  const renderCurrentStep = () => {
    switch (currentStep) {
      case 'intro':
        return renderIntroStep();
      case 'benefits':
        return renderBenefitsStep();
      case 'setup':
        return renderSetupStep();
      case 'complete':
        return renderCompleteStep();
      default:
        return renderIntroStep();
    }
  };

  return (
    <div className={`max-w-2xl mx-auto ${className}`}>
      <div className="bg-gray-900 rounded-lg p-8">
        {/* 步骤标题 */}
        {currentStep !== 'intro' && currentStep !== 'complete' && (
          <div className="text-center mb-6">
            <h1 className="text-xl font-semibold text-white mb-1">
              {steps[currentStep].title}
            </h1>
            <p className="text-gray-400 text-sm">
              {steps[currentStep].description}
            </p>
          </div>
        )}

        {/* 进度?*/}
        {currentStep !== 'intro' && currentStep !== 'complete' && renderProgressBar()}

        {/* 当前步骤内容 */}
        {renderCurrentStep()}
      </div>
    </div>
  );
};

export default MFAWizard;
