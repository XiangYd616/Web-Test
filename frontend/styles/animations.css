/**
 * 动画样式库
 * 包含各种微交互和过渡效果的CSS实现
 */

/* ==================== 基础过渡配置 ==================== */
:root {
  --transition-fast: 0.15s ease-out;
  --transition-normal: 0.25s ease-out;
  --transition-slow: 0.4s ease-out;
  --spring-bounce: cubic-bezier(0.68, -0.55, 0.265, 1.55);
  --spring-smooth: cubic-bezier(0.4, 0.0, 0.2, 1);
}

/* ==================== 全局动画类 ==================== */

.animate-fade-in {
  animation: fadeIn 0.3s ease-out;
}

.animate-slide-up {
  animation: slideUp 0.4s var(--spring-smooth);
}

.animate-slide-down {
  animation: slideDown 0.4s var(--spring-smooth);
}

.animate-slide-left {
  animation: slideLeft 0.4s var(--spring-smooth);
}

.animate-slide-right {
  animation: slideRight 0.4s var(--spring-smooth);
}

.animate-scale-in {
  animation: scaleIn 0.3s var(--spring-bounce);
}

.animate-bounce-in {
  animation: bounceIn 0.6s var(--spring-bounce);
}

.animate-rotate-in {
  animation: rotateIn 0.5s ease-out;
}

/* ==================== 微交互效果 ==================== */

.hover-lift {
  transition: transform var(--transition-normal), box-shadow var(--transition-normal);
}

.hover-lift:hover {
  transform: translateY(-2px);
  box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
}

.hover-scale {
  transition: transform var(--transition-fast);
}

.hover-scale:hover {
  transform: scale(1.02);
}

.hover-glow {
  transition: box-shadow var(--transition-normal), background-color var(--transition-normal);
}

.hover-glow:hover {
  box-shadow: 0 0 20px rgba(59, 130, 246, 0.4);
}

.hover-slide {
  transition: transform var(--transition-normal);
}

.hover-slide:hover {
  transform: translateX(4px);
}

.hover-rotate {
  transition: transform var(--transition-normal);
}

.hover-rotate:hover {
  transform: rotate(5deg);
}

/* ==================== 按钮动画效果 ==================== */

.btn-animated {
  position: relative;
  overflow: hidden;
  transition: all var(--transition-normal);
}

.btn-animated::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: left 0.5s;
}

.btn-animated:hover::before {
  left: 100%;
}

.btn-pulse {
  animation: pulse 2s infinite;
}

.btn-bounce {
  transition: transform var(--transition-fast);
}

.btn-bounce:active {
  transform: scale(0.95);
}

/* ==================== 卡片动画效果 ==================== */

.card-hover {
  transition: all var(--transition-normal);
  border: 1px solid transparent;
}

.card-hover:hover {
  transform: translateY(-4px);
  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
  border-color: rgba(59, 130, 246, 0.2);
}

.card-tilt {
  transition: transform var(--transition-normal);
}

.card-tilt:hover {
  transform: perspective(1000px) rotateX(5deg) rotateY(5deg);
}

.card-flip {
  transition: transform 0.6s;
  transform-style: preserve-3d;
}

.card-flip:hover {
  transform: rotateY(180deg);
}

.card-flip .front,
.card-flip .back {
  backface-visibility: hidden;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.card-flip .back {
  transform: rotateY(180deg);
}

/* ==================== 输入框动画效果 ==================== */

.input-focus {
  transition: all var(--transition-normal);
}

.input-focus:focus {
  transform: scale(1.02);
  box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
}

.input-label-float {
  position: relative;
}

.input-label-float label {
  position: absolute;
  left: 12px;
  top: 50%;
  transform: translateY(-50%);
  transition: all var(--transition-normal);
  pointer-events: none;
  color: #9ca3af;
}

.input-label-float input:focus + label,
.input-label-float input:not(:placeholder-shown) + label {
  top: -8px;
  font-size: 0.75rem;
  color: #3b82f6;
  background: white;
  padding: 0 4px;
}

/* ==================== 加载动画 ==================== */

.loading-dots {
  display: inline-flex;
  gap: 4px;
}

.loading-dots span {
  width: 6px;
  height: 6px;
  background: currentColor;
  border-radius: 50%;
  animation: loadingDot 1.4s ease-in-out infinite both;
}

.loading-dots span:nth-child(1) { animation-delay: -0.32s; }
.loading-dots span:nth-child(2) { animation-delay: -0.16s; }
.loading-dots span:nth-child(3) { animation-delay: 0s; }

.loading-spinner {
  width: 24px;
  height: 24px;
  border: 2px solid #f3f4f6;
  border-top: 2px solid #3b82f6;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.loading-bars {
  display: inline-flex;
  gap: 2px;
}

.loading-bars span {
  width: 3px;
  height: 20px;
  background: currentColor;
  animation: loadingBar 1s ease-in-out infinite;
}

.loading-bars span:nth-child(1) { animation-delay: 0s; }
.loading-bars span:nth-child(2) { animation-delay: 0.1s; }
.loading-bars span:nth-child(3) { animation-delay: 0.2s; }
.loading-bars span:nth-child(4) { animation-delay: 0.3s; }

/* ==================== 进度条动画 ==================== */

.progress-bar {
  width: 100%;
  height: 6px;
  background-color: #e5e7eb;
  border-radius: 3px;
  overflow: hidden;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, #3b82f6, #8b5cf6);
  border-radius: 3px;
  transition: width 0.5s ease-out;
  position: relative;
}

.progress-fill::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
  animation: progressShine 2s infinite;
}

.progress-circular {
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: conic-gradient(#3b82f6 var(--progress, 0%), #e5e7eb 0%);
  position: relative;
}

.progress-circular::before {
  content: '';
  position: absolute;
  top: 6px;
  left: 6px;
  right: 6px;
  bottom: 6px;
  border-radius: 50%;
  background: white;
}

/* ==================== 通知动画 ==================== */

.notification-enter {
  animation: notificationSlideIn 0.3s ease-out;
}

.notification-exit {
  animation: notificationSlideOut 0.3s ease-in;
}

.notification-shake {
  animation: shake 0.5s ease-in-out;
}

/* ==================== 模态框动画 ==================== */

.modal-backdrop {
  animation: fadeIn 0.2s ease-out;
}

.modal-content {
  animation: modalSlideIn 0.3s var(--spring-smooth);
}

.modal-exit .modal-backdrop {
  animation: fadeOut 0.2s ease-in;
}

.modal-exit .modal-content {
  animation: modalSlideOut 0.3s ease-in;
}

/* ==================== 数字计数动画 ==================== */

.counter {
  display: inline-block;
}

.counter-digit {
  display: inline-block;
  transition: transform 0.3s ease-out;
}

.counter-digit.animate {
  animation: counterBounce 0.5s ease-out;
}

/* ==================== 列表项动画 ==================== */

.list-enter {
  animation: listItemSlideIn 0.4s ease-out;
}

.list-exit {
  animation: listItemSlideOut 0.3s ease-in;
}

.list-move {
  transition: transform 0.3s ease-out;
}

/* ==================== 关键帧动画定义 ==================== */

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes fadeOut {
  from { opacity: 1; }
  to { opacity: 0; }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideDown {
  from {
    opacity: 0;
    transform: translateY(-20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes slideLeft {
  from {
    opacity: 0;
    transform: translateX(20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideRight {
  from {
    opacity: 0;
    transform: translateX(-20px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: scale(0.9);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes bounceIn {
  0% {
    opacity: 0;
    transform: scale(0.3);
  }
  50% {
    opacity: 1;
    transform: scale(1.05);
  }
  70% {
    transform: scale(0.9);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes rotateIn {
  from {
    opacity: 0;
    transform: rotate(-180deg) scale(0.5);
  }
  to {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }
}

@keyframes pulse {
  0% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.7);
  }
  70% {
    box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
  }
  100% {
    box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
  }
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

@keyframes loadingDot {
  0%, 80%, 100% {
    transform: scale(0);
    opacity: 0.5;
  }
  40% {
    transform: scale(1);
    opacity: 1;
  }
}

@keyframes loadingBar {
  0%, 40%, 100% {
    transform: scaleY(0.4);
  }
  20% {
    transform: scaleY(1);
  }
}

@keyframes progressShine {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes notificationSlideIn {
  from {
    opacity: 0;
    transform: translateX(100%);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes notificationSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
  }
  to {
    opacity: 0;
    transform: translateX(100%);
  }
}

@keyframes shake {
  0%, 100% { transform: translateX(0); }
  10%, 30%, 50%, 70%, 90% { transform: translateX(-5px); }
  20%, 40%, 60%, 80% { transform: translateX(5px); }
}

@keyframes modalSlideIn {
  from {
    opacity: 0;
    transform: translateY(-50px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
}

@keyframes modalSlideOut {
  from {
    opacity: 1;
    transform: translateY(0) scale(1);
  }
  to {
    opacity: 0;
    transform: translateY(-50px) scale(0.95);
  }
}

@keyframes counterBounce {
  0% { transform: scale(1); }
  50% { transform: scale(1.2); }
  100% { transform: scale(1); }
}

@keyframes listItemSlideIn {
  from {
    opacity: 0;
    transform: translateX(-20px);
    max-height: 0;
  }
  to {
    opacity: 1;
    transform: translateX(0);
    max-height: 100px;
  }
}

@keyframes listItemSlideOut {
  from {
    opacity: 1;
    transform: translateX(0);
    max-height: 100px;
  }
  to {
    opacity: 0;
    transform: translateX(-20px);
    max-height: 0;
  }
}

/* ==================== 响应式动画控制 ==================== */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }
}

/* ==================== 主题相关动画 ==================== */

.dark-theme {
  --glow-color: rgba(147, 197, 253, 0.4);
}

.light-theme {
  --glow-color: rgba(59, 130, 246, 0.4);
}

.theme-transition {
  transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease;
}

/* ==================== 工具类 ==================== */

.animate-delay-100 { animation-delay: 0.1s; }
.animate-delay-200 { animation-delay: 0.2s; }
.animate-delay-300 { animation-delay: 0.3s; }
.animate-delay-500 { animation-delay: 0.5s; }

.transition-all { transition: all var(--transition-normal); }
.transition-fast { transition: all var(--transition-fast); }
.transition-slow { transition: all var(--transition-slow); }

.will-change-transform { will-change: transform; }
.will-change-opacity { will-change: opacity; }
.will-change-auto { will-change: auto; }
