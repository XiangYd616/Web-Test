# ==========================================
# Test-Web Platform Backend Configuration
# ==========================================
# 复制此文件为 .env 并根据实际环境修改配置值

# ==========================================
# 基本服务配置
# ==========================================
PORT=3001
NODE_ENV=development
HOST=localhost

# ==========================================
# CORS配置
# ==========================================
CORS_ORIGIN=http://localhost:3000,http://localhost:5174
CORS_METHODS=GET,POST,PUT,DELETE,PATCH,OPTIONS
CORS_ALLOW_CREDENTIALS=true

# ==========================================
# 数据库配置
# ==========================================
# PostgreSQL配置
DATABASE_URL=postgres://username:password@localhost:5432/testweb
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=testweb
DATABASE_USERNAME=your_username
DATABASE_PASSWORD=your_password
DATABASE_SSL=false

# 连接池配置
DB_POOL_MAX=20
DB_POOL_MIN=5
DB_POOL_ACQUIRE=30000
DB_POOL_IDLE=10000

# ==========================================
# 认证与安全配置
# ==========================================
# JWT配置
JWT_SECRET=your-super-secret-jwt-key-here-please-change-in-production
JWT_EXPIRES_IN=24h
JWT_REFRESH_EXPIRES_IN=7d

# 会话配置
SESSION_SECRET=your-session-secret-key-here
SESSION_MAX_AGE=86400000

# 密码哈希
BCRYPT_SALT_ROUNDS=12

# 账户锁定配置
MAX_LOGIN_ATTEMPTS=5
LOCKOUT_DURATION=900000

# ==========================================
# OAuth配置
# ==========================================
# GitHub OAuth
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# Google OAuth
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

# GitLab OAuth
GITLAB_CLIENT_ID=your_gitlab_client_id
GITLAB_CLIENT_SECRET=your_gitlab_client_secret

# OAuth回调URL
OAUTH_CALLBACK_URL=http://localhost:3001/api/oauth

# ==========================================
# 文件上传配置
# ==========================================
UPLOAD_MAX_SIZE=10485760
UPLOAD_ALLOWED_TYPES=jpg,jpeg,png,gif,pdf,doc,docx,txt,json,xml
UPLOAD_DESTINATION=./uploads

# ==========================================
# 日志配置
# ==========================================
LOG_LEVEL=info
LOG_FILE_PATH=./logs
LOG_MAX_SIZE=10m
LOG_MAX_FILES=5
LOG_DATE_PATTERN=YYYY-MM-DD

# ==========================================
# 速率限制配置
# ==========================================
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX=100
RATE_LIMIT_MESSAGE=Too many requests from this IP

# API专用速率限制
API_RATE_LIMIT_WINDOW_MS=900000
API_RATE_LIMIT_MAX=1000

# ==========================================
# 测试引擎配置
# ==========================================
# 默认测试超时时间(毫秒)
TEST_DEFAULT_TIMEOUT=300000

# 最大并发测试数量
MAX_CONCURRENT_TESTS=10

# 测试结果保留天数
TEST_RESULTS_RETENTION_DAYS=30

# 压力测试限制
STRESS_TEST_MAX_CONCURRENCY=1000
STRESS_TEST_MAX_REQUESTS=10000
STRESS_TEST_MAX_DURATION=300

# ==========================================
# 第三方服务API密钥
# ==========================================
# Google APIs
GOOGLE_API_KEY=your_google_api_key
GOOGLE_PROJECT_ID=your_google_project_id
GOOGLE_PAGESPEED_API_KEY=your_pagespeed_api_key

# 安全扫描服务
SECURITY_SCANNER_API_KEY=your_security_scanner_api_key

# CDN和性能服务
CLOUDFLARE_API_TOKEN=your_cloudflare_token
PINGDOM_API_KEY=your_pingdom_api_key

# ==========================================
# 缓存配置
# ==========================================
# Redis配置(可选)
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=3600

# 内存缓存配置
MEMORY_CACHE_MAX_SIZE=100
MEMORY_CACHE_TTL=300000

# ==========================================
# WebSocket配置
# ==========================================
WEBSOCKET_PORT=3002
WEBSOCKET_CORS_ORIGIN=http://localhost:3000,http://localhost:5174

# ==========================================
# 队列配置
# ==========================================
QUEUE_REDIS_HOST=localhost
QUEUE_REDIS_PORT=6379
QUEUE_REDIS_DB=1
QUEUE_MAX_ATTEMPTS=3
QUEUE_RETRY_DELAY=5000

# ==========================================
# 监控配置
# ==========================================
# Sentry错误监控
SENTRY_DSN=your_sentry_dsn

# 应用监控
MONITORING_ENABLED=true
METRICS_COLLECTION_INTERVAL=60000

# 健康检查
HEALTH_CHECK_TIMEOUT=5000

# ==========================================
# 邮件服务配置
# ==========================================
# SMTP配置
SMTP_HOST=smtp.gmail.com
SMTP_PORT=587
SMTP_SECURE=false
SMTP_USER=your_email@gmail.com
SMTP_PASS=your_email_password

# 发件人信息
EMAIL_FROM=noreply@testweb.com
EMAIL_FROM_NAME=Test-Web Platform

# ==========================================
# SSL/TLS配置
# ==========================================
# HTTPS配置(生产环境)
HTTPS_ENABLED=false
SSL_CERT_PATH=./ssl/cert.pem
SSL_KEY_PATH=./ssl/key.pem

# ==========================================
# 开发环境配置
# ==========================================
# 开发模式开关
DEV_MODE=true
DEV_CORS_ALL_ORIGINS=true
DEV_LOG_REQUESTS=true
DEV_MOCK_EXTERNAL_APIS=false

# 调试配置
DEBUG_ENABLED=true
DEBUG_NAMESPACE=testweb:*

# ==========================================
# 生产环境示例配置
# ==========================================
# 生产环境请修改以下配置：
# NODE_ENV=production
# DATABASE_SSL=true
# CORS_ORIGIN=https://yourdomain.com
# JWT_SECRET=your-super-secure-production-jwt-secret
# SESSION_SECRET=your-super-secure-production-session-secret
# HTTPS_ENABLED=true
# DEV_MODE=false

# ==========================================
# 安全提醒
# ==========================================
# 1. 生产环境必须修改所有默认密钥和密码
# 2. 数据库连接信息必须使用真实配置
# 3. 启用HTTPS和SSL证书验证
# 4. 设置适当的CORS策略
# 5. 配置防火墙和安全组规则
# 6. 定期轮换API密钥和访问令牌
